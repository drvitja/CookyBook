@page "/recipeoverview"

@using CookyBook.Shared
@using CookyBook.Shared.DataTransferObjects
@inject HttpClient Http
@inject NavigationManager NavManager

<PageTitle>CookBook</PageTitle>

<h1>CookBook</h1>

@if (Recipes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <a>
        <button Delete @onclick="DeleteRecipe">

            <span class="oi oi-trash"></span>
        </button>
    </a>
    <a href="/save">
        <button Add>

            <span class="oi oi-plus"></span>
        </button>
    </a>

    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Id</th>
                <th>Title</th>
                <th>Description</th>
                <th>Preparation</th>
                <th>Duration</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var recipe in Recipes)
            {
                <tr>
                    <td><input type="checkbox" value="@recipe.Selected" /></td>
                    <td>@recipe.Id</td>
                    <td>@recipe.Title</td>
                    <td>@recipe.Description</td>
                    <td>@recipe.Preparation</td>
                    <td>@recipe.Duration</td>
                    <td><input type="button" value="Edit"></td>
                </tr>
            }
        </tbody>	
    </table>
}

@code {
    private RecipeDto[]? Recipes;
    private RecipeDto Recipe;

    protected override async Task OnInitializedAsync()
    {
        Recipes = await Http.GetFromJsonAsync<RecipeDto[]>("Recipe");
    }

    public void DeleteRecipe()
    {
        foreach (var recipe in Recipes)
        {
            if (recipe.Selected = true)
            {
                
            }
        }
        Http.PutAsJsonAsync<RecipeDto>("Recipe", Recipe).ContinueWith(prop =>
            {
                NavManager.NavigateTo("/recipeoverview");
            }); ;
    }
}