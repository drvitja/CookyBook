@page "/recipeoverview"

@using CookyBook.Shared
@using CookyBook.Shared.DataTransferObjects
@inject HttpClient Http
@inject NavigationManager NavManager

<PageTitle>CookyBook</PageTitle>


	@if (Recipes == null)
	{
		<p><em>Loading...</em></p>
	}

	else
	{



		<div class="wrapper">
			<div class="header">Recipes</div>

			<p></p>

		@if (!IsHidden)
		{
			<a>
				<button Delete @onclick="DeleteRecipe">
					<span class="oi oi-trash"></span>
				</button>
			</a>
		}

		<a href="/save">
			<button Add>
				<span class="oi oi-plus"></span>
			</button>
		</a>

			<div class="cards_wrap">
				@foreach (var recipe in Recipes)
				{
					<div class="card_item">
						<div class="card_inner">
							<input class="recipe_checkbox" type="checkbox" @bind-value="@recipe.Selected" />
							<img src="@recipe.ImageUrl" />
							<div class="recipe_name">@recipe.Title</div>
						<div class="recipe_duration"><b>Duration: </b>@recipe.Duration</div>
						<div class="recipe_level"><b>Difficulty: </b>@recipe.Level</div>
							<div class="recipe_description"><b>Description: </b>@recipe.Description</div>
						</div>
					</div>
				}
			</div>
		</div>
	}

@* @foreach (var recipe in Recipes)
    {
        <div class="d-md-none d-sm-grid">
            <div class="row row-cols-1 row-cols-md-2 g-4 m-2">
                <div class="col">
                    <div class="card h-100">
                        <div class="card-header">
                            <input type="checkbox" @bind-value="@recipe.Selected" />
                            <img src="@recipe.ImageUrl" />
                        </div>
                        <div class="card-body">
                            <h5>@recipe.Title</h5>
                            <p>@recipe.Description</p>
                            <p class="card-text">@recipe.Preparation</p>
                        </div>
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-6">
                                    <p class="text-muted">Zubereitungsdauer @recipe.Duration.TotalMinutes Minuten</p>
                                </div>
                                <div class="col-6">
                                    <button class="btn btn-danger btn-sm m-2" type="button">Edit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }*@



@code {
	private List<RecipeDto>? Recipes = new();
	private RecipeDto Recipe;

	public bool IsHidden => Recipes == null || Recipes.Count() == 0 ? true : false;

	protected override async Task OnInitializedAsync()
	{
		var response = await Http.GetFromJsonAsync<RecipeDto[]>("Recipe");
		Recipes = response?.ToList<RecipeDto>();
	}

	public async void DeleteRecipe()
	{
		List<RecipeDto> ItemsToDelete = new();
		ItemsToDelete = Recipes!.Where(x => x.Selected).ToList<RecipeDto>();
		foreach (var recipe in ItemsToDelete)
		{
			await Http.DeleteAsync($"Recipe/{recipe.Id}");
			Recipes!.Remove(recipe);
			this.StateHasChanged();
		}
	}
}