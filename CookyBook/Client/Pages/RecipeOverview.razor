@page "/recipeoverview"

@using CookyBook.Shared
@using CookyBook.Shared.DataTransferObjects
@inject HttpClient Http
@inject NavigationManager NavManager

<PageTitle>CookBook</PageTitle>

<h1>CookBook</h1>

@if (Recipes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @if (!IsHidden)
    {
        <a>
            <button Delete @onclick="DeleteRecipe">
                <span class="oi oi-trash"></span>
            </button>
        </a>
    }
    <a href="/save">
        <button Add>
            <span class="oi oi-plus"></span>
        </button>
    </a>

   <table class="d-none d-md-table border-1">
        <thead>
            <tr>
                <th></th>
                <th>Id</th>
                <th>Title</th>
                <th>Description</th>
                <th>Preparation</th>
                <th>Duration</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var recipe in Recipes)
            {
                <tr>
                    <td><input type="checkbox" value="@recipe.Selected" /></td>
                    <td>@recipe.Id</td>
                    <td>@recipe.Title</td>
                    <td>@recipe.Description</td>
                    <td>@recipe.Preparation</td>
                    <td>@recipe.Duration</td>
                    <td><input type="button" value="Edit"></td>
                </tr>
            }
        </tbody>	
    </table>

    @foreach (var recipe in Recipes)
    {
        <div class="d-md-none d-sm-grid">
            <div class="row row-cols-1 row-cols-md-2 g-4 m-2">
                <div class="col">
                    <div class="card h-100">
                        <div class="card-header">
                            <input type="checkbox" value="@recipe.Selected" />
                            <img src="@recipe.ImageUrl" />
                        </div>
                        <div class="card-body">
                            <h5>@recipe.Title</h5>
                            <p>@recipe.Description</p>
                            <p class="card-text">@recipe.Preparation</p>
                        </div>
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-6">
                                    <p class="text-muted">Zubereitungsdauer @recipe.Duration.TotalMinutes Minuten</p>
                                </div>
                                <div class="col-6">
                                    <button class="btn btn-danger btn-sm m-2" type="button">Edit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

}

@code {
    private List<RecipeDto>? Recipes = new();
    private RecipeDto Recipe;

    public bool IsHidden => Recipes == null || Recipes.Count() == 0 ? true : false;

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetFromJsonAsync<RecipeDto[]>("Recipe");
        Recipes = response?.ToList<RecipeDto>();
    }

    public void DeleteRecipe()
    {
        foreach (var recipe in Recipes!.Where(x => x.Selected))
        {

            Http.PutAsJsonAsync<RecipeDto>("Recipe", Recipe).ContinueWith(prop =>
                {
                    NavManager.NavigateTo("/recipeoverview");
                });
        }
    }
}